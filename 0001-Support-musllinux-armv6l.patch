From 523ad69294a1190812e63fb78ff94c8f5359011f Mon Sep 17 00:00:00 2001
From: Pascal Vizeli <pvizeli@syshack.ch>
Date: Wed, 15 Jun 2022 12:48:56 +0000
Subject: [PATCH] Support musllinux armv6l

Co-authored-by: Marc Mueller <30130371+cdce8p@users.noreply.github.com>

diff --git a/src/auditwheel/architecture.py b/src/auditwheel/architecture.py
index 4a506e8..f0c39d6 100644
--- a/src/auditwheel/architecture.py
+++ b/src/auditwheel/architecture.py
@@ -11,6 +11,7 @@ class Architecture(Enum):
     value: str
 
     aarch64 = "aarch64"
+    armv6l = "armv6l"
     armv7l = "armv7l"
     i686 = "i686"
     loongarch64 = "loongarch64"
diff --git a/src/auditwheel/policy/__init__.py b/src/auditwheel/policy/__init__.py
index 29a743c..36c9ba2 100644
--- a/src/auditwheel/policy/__init__.py
+++ b/src/auditwheel/policy/__init__.py
@@ -295,6 +295,7 @@ def _fixup_musl_libc_soname(
             Architecture.aarch64: "libc.musl-aarch64.so.1",
             Architecture.s390x: "libc.musl-s390x.so.1",
             Architecture.ppc64le: "libc.musl-ppc64le.so.1",
+            Architecture.armv6l: "libc.musl-armhf.so.1",
             Architecture.armv7l: "libc.musl-armv7.so.1",
             Architecture.riscv64: "libc.musl-riscv64.so.1",
             Architecture.loongarch64: "libc.musl-loongarch64.so.1",
diff --git a/src/auditwheel/policy/musllinux-policy.json b/src/auditwheel/policy/musllinux-policy.json
index a55e5fb..2584904 100644
--- a/src/auditwheel/policy/musllinux-policy.json
+++ b/src/auditwheel/policy/musllinux-policy.json
@@ -20,6 +20,8 @@
       },
       "s390x": {
       },
+      "armv6l": {
+      },
       "armv7l": {
       },
       "riscv64": {
@@ -43,6 +45,8 @@
       },
       "s390x": {
       },
+      "armv6l": {
+      },
       "armv7l": {
       },
       "riscv64": {
diff --git a/src/auditwheel/wheel_abi.py b/src/auditwheel/wheel_abi.py
index 0e51ce5..7a4caed 100644
--- a/src/auditwheel/wheel_abi.py
+++ b/src/auditwheel/wheel_abi.py
@@ -98,7 +98,13 @@ def get_wheel_elfdata(
                 if architecture is None:
                     log.info("setting architecture to %s", elf_arch.value)
                     architecture = elf_arch
-                elif elf_arch != architecture.baseline:
+                elif (
+                    elf_arch != architecture.baseline
+                    and not (
+                        architecture.baseline == Architecture.armv6l
+                        and elf_arch == Architecture.armv7l
+                    )
+                ):
                     shared_libraries_with_invalid_machine.append(so_name)
                     log.warning("ignoring: %s with %s architecture", so_name, elf_arch)
                     continue
