name: "Publish"

on:
  release:
    types: [published]
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  publish:
    name: Publish builder
    runs-on: ubuntu-latest
    strategy:
      fail-fast: False
      matrix:
        abi: ["cp310"]
        tag: ["musllinux_1_2"]
        arch: ["aarch64", "armhf", "armv7", "amd64", "i386"]
        include:
          - abi: cp310
            tag: musllinux_1_2
            base: 3.10-alpine3.16
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - shell: bash
        id: info
        run: |
          name="ghcr.io/home-assistant/wheels/${{ matrix.arch }}/${{ matrix.tag }}/${{ matrix.abi }}"

          version=$(echo "${{ github.ref }}" | awk -F"/" '{print $NF}' )
          if [ "${version}" = "master" ]; then
            version=dev
          fi
          version=dev

          base="ghcr.io/home-assistant/${{ matrix.arch }}-base-python:${{ matrix.base }}"

          cpu=
          if [ "${{ matrix.arch }}" = "armhf" ]; then
            cpu=arm1176
          fi

          echo "::set-output name=name::$name"
          echo "::set-output name=version::$version"
          echo "::set-output name=base::$base"
          echo "::set-output name=cpu::$cpu"

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2.0.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - shell: bash
        run: |
          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

      - shell: bash
        run: |
          docker build \
            -t ${{ steps.info.outputs.name }}:${{ steps.info.outputs.version }} \
            --build-arg "BUILD_FROM=${{ steps.info.outputs.base }}" \
            --build-arg "BUILD_ARCH=${{ matrix.arch }}" \
            --build-arg "QEMU_CPU=${{ steps.info.outputs.cpu }}" \
            --build-arg "CPYTHON_ABI=${{ matrix.abi }}" \
            .

      - shell: bash
        run: |
          docker push ${{ steps.info.outputs.name }}:${{ steps.info.outputs.version }}
