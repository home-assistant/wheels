name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  PYTHON_VERSION: "3.10"

jobs:
  tox:
    name: Tox
    runs-on: ubuntu-latest
    steps:
      - name: Check out code from GitHub
        uses: actions/checkout@v3.0.2

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4.0.0
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install tox
        run: python3 -m pip install tox

      - name: Run tox
        run: tox

  hadolint:
    name: Hadolint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code from GitHub
        uses: actions/checkout@v3.0.2

      - name: Lint Dockerfile
        uses: hadolint/hadolint-action@v2.1.0
        with:
          dockerfile: "Dockerfile"
          failure-threshold: warning

  test:
    name: Test wheels ${{ matrix.arch }}-${{ matrix.abi }}-${{ matrix.tag }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        abi: ["cp310"]
        tag: ["musllinux_1_2"]
        arch: ["aarch64", "armhf", "armv7", "amd64", "i386"]

    steps:
      - name: Check out code from GitHub
        uses: actions/checkout@v3.0.2

      - name: Write env-file
        shell: bash
        run: |
          (
            echo "GRPC_BUILD_WITH_BORING_SSL_ASM=false"
            echo "GRPC_PYTHON_BUILD_SYSTEM_OPENSSL=true"
            echo "GRPC_PYTHON_BUILD_WITH_CYTHON=true"
          ) > .env_file

      - name: Build wheels
        uses: ./
        with:
          abi: ${{ matrix.abi }}
          tag: ${{ matrix.tag }}
          arch: ${{ matrix.arch }}
          apk: "libffi-dev;openssl-dev"
          skip-binary: "orjson"
          env-file: True
          test: True
          requirements: "requirements_wheels_test.txt"
